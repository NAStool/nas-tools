# 【配置注意要符合yaml语法，:号后有1个空格，不能使用全角标点符号】
# 【最新版本已经可以通过WEB页面对所有配置项进行配置，推荐使用WEB页面进行配置】
app:
  # 【日志记录类型】：server、file
  # 如果是使用Docker安装建议设置为file，将日志输出到配置文件目录
  # 如果是使用群晖套件建议配置为 server，可将日志输出到群晖的日志中心便于查看
  logtype: file
  # 【日志文件的路径】：logtype为file时生效
  logpath: '/config/logs'
  # 【群晖日志中心IP和端口】：logtype为SERVER时生效。端口一般是514，只需要改动IP为群晖的IP，示例：127.0.0.1:514
  logserver: 127.0.0.1:514
  # 【日志级别】：info、debug、error
  loglevel: info
  # 【WEB管理界面端口】：默认3000
  web_port: 3000
  # 【WEB管理页面登录用户】，默认admin
  login_user: admin
  # 【WEB管理页面登录密码】：默认password，如果是全数字密码，要用''括起来
  login_password: password
  # 【WEB管理界面使用的HTTPS的证书和KEY的路径】，留空则不启用HTTPS
  ssl_cert:
  ssl_key:
  # 【TMDB API KEY】：需要在https://www.themoviedb.org/申请，必须配置，否则无法识别媒体资源和重命名
  # 以下地址需要网络能够正常访问：api.themoviedb.org、webservice.fanart.tv
  rmt_tmdbkey:
  # 【TMDB匹配模式】：normal、strict，normal模式下如使用文件名/种子名中的年份无法匹配到媒体信息，会去掉年份再匹配一次；strict模式则严格按文件中年份匹配
  # normal模式下会提升识别成功率，但也可能会导致误识别率增加；strict模式可以降低误识别率，但可能导致很多文件名/种子名中年份不正确的无法被识别（特别是剧集，需要是首播年份）
  rmt_match_mode: normal
  # 【设置代理】，themoviedb、fanart、telegram等将使用代理访问，http和https均需配置，可以是http也可以是socks5，但需要带http或socks5前缀，两项可以配置为一样，留空则不启用
  # 示例：'http://127.0.0.1:7890' 'socks5://127.0.0.1:8018'
  proxies:
    http:
    https:
  # 【本系统的WEB的外网地址】：需要是外网IP或者域名，需要包含端口，用于微信/Telegram信息点击跳转，如不需要可配空
  # 示例：http://IP:3000
  domain: ''
  # 【UserAgent】：可适当修改，用于PT站签到、豆瓣数据抓取等
  user_agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36"

# 【配置媒体库信息】
media:
  # 【媒体库管理软件】：emby、jellyfin、plex，需要在emby或jellyfin或plex区配置详细信息，用于下载检查控重、媒体库展示等，建议配置
  media_server: emby
  # 【媒体库电影文件存放目录】：支持配置多个目录，不同的硬盘需映射为不同的根目录，以更于程序区分
  movie_path:
  # 【媒体库电视剧文件存放目录】：支持配置多个目录，不同的硬盘需映射为不同的根目录，以更于程序区分
  tv_path:
  # 【媒体库动漫文件单独存放目录】：支持配置多个目录，不同的硬盘需映射为不同的根目录，以更于程序区分
  # 如果设置了该目录，则所有动漫电视剧都会识别为动漫并存放在该目录下，否则动漫电视剧会识别为电视剧并存放在电视剧目录分类下；动漫电影仍然在电影目录分类下
  anime_path:
  # 【无法识别时转移存放的目录】：如有多个磁盘，需要对应配置多个目录，否则跨盘无法硬链接
  # 注意：如果你在sync区域配置了未识别目录，由会优先转移到对应未识别目录下，只有PT下载转移及sync未配置未识别目录时才会使用该目录
  # 未识别的记录同时会在媒体识别->手动识别下面出现，unknown_path只是硬链接一份用于备份，同时手工识别处理后程序也不会主动删除，如果不想要多硬链接一份，可以不配置该目录
  unknown_path:
  # 【二级分类开关】：电影/电视剧/动漫是否需要二级分类，启用二级分类后会在电影/电视剧/动漫目录下按二级分类名建立子目录
  # 此处配置分类的策略名，配置文件目录中需要有与策略名同名的.yaml配置文件
  # 默认策略default-category分类设置可参考"default-category.yaml"，分类参见README.MD说明
  # 如不需要启动分类，则该项配置为空
  category: 'default-category'
  # 【转移到媒体库的最小文件大小】：避免预告片/MV等影响识别，单位M
  min_filesize: 150
  # 【洗版开关】：如开启则则新下载了更大的文件会覆盖媒体库目录中已有的文件
  filesize_cover: true
  # 【电影命名定义】：程序会按定义的命名格式对电影进行重命名；/代表上下级目录，{}内为占位符；占位符会使用文件识别出来的实际值替换；占位符外的字符会当成普通字符，直接体现在名称上
  # 电影占位符有：{title}：标题，{year}：年份，{edition}：版本(Bluray/WEB-DL等)，{videoFormat}：分辨率(1080p/4k等)，{videoCodec}：视频编码，{audioCodec}：音频编码及声道，{tmdbid}：TMDB的ID，{part}：part1/disc1/dvd1等
  movie_name_format: '{title} ({year})/{title}-{part} ({year}) - {videoFormat}'
  # 【电视剧命名定义】：程序会按定义的命名格式对电视剧进行重命名；/代表上下级目录，{}内为占位符；占位符会使用文件识别出来的实际值替换，占位符外的字符会当成普通字符，直接体现在名称上
  # 电视剧占位符有：{title}：标题，{year}：年份，{edition}：版本(Bluray/WEB-DL等)，{videoFormat}：分辨率(1080p/4k等)，{videoCodec}：视频编码，{audioCodec}：音频编码及声道，{tmdbid}：TMDB的ID，{season}：季数，{episode}：集数，{season_episode}：剧集SxxExx，{part}：part1/disc1/dvd1等
  tv_name_format: '{title} ({year})/Season {season}/{title}-{part} - {season_episode} - 第{episode}集'
  # 【生成NFO描述文件及海报】：开启后文件转移完成时会自动生成nfo描述文件及poster海报，协助媒体服务器识别和搜刮
  nfo_poster: false

# 配置Emby服务器信息
emby:
  # 【Emby服务器IP地址和端口】：注意区分http和https，http时可以不加http://，https时必须加https://
  host: http://127.0.0.1:8096
  # 【Emby ApiKey】：在Emby设置->高级->API密钥处生成，注意不要复制到了应用名称
  api_key:

# 配置Jellyfin服务器信息
jellyfin:
  # 【Jellyfin服务器IP地址和端口】：注意区分http和https，http时可以不加http://，https时必须加https://
  host: http://127.0.0.1:8096
  # 【Jellyfin ApiKey】：在Jellyfin设置->高级->API密钥处生成
  api_key:

# 配置Plex服务器信息
plex:
  # 【Plex服务器IP地址和端口】：注意区分http和https，http时可以不加http://，https时必须加https://
  host: http://127.0.0.1:32400
  # 【Plex服务器的名称】
  servername:
  # 【Plex用户名】
  username:
  # 【Plex用户密码】
  password:

# 【配置消息通知服务】
message:
  # 【发送消息使用的渠道】：wechat、serverchan、telegram、bark，需在对应的配置区域配置。不使用的渠道配置可以留空或者删除。推荐使用wechat微信渠道。不设置则不启用消息服务
  msg_channel: wechat
  # 【Emby播放状态通知白名单】：配置了Emby webhooks插件回调时，用户播放媒体库中的媒体时会发送消息通知，本处配置哪些用户的设备不通知，避免打扰，配置格式：用户:设备名称，可用 - 增加多项
  webhook_ignore:
  # 【企业微信通知】：在企业微信https://work.weixin.qq.com/中申请和新增一个自建应用。配合微信的企业微信插件，可以直接在微信中查看本程序的消息以及控制程序运行，非常好用，推荐使用该渠道
  wechat:
    # corpid:每个企业都拥有唯一的corpid，获取此信息可在管理后台“我的企业”－“企业信息”下查看“企业ID”（需要有管理员权限）
    # corpsecret:自建应用secret。在管理后台->“应用与小程序”->“应用”->“自建”，点进某个应用，即可看到
    # agentid:每个应用都有唯一的agentid。在管理后台->“应用与小程序”->“应用”，点进某个应用，即可看到agentid
    # 具体不明白的参考企业微信的开发者中心
    corpid:
    corpsecret:
    agentid:
    # 【微信回调】：用于在微信中控制本程序，需要在企业微信https://work.weixin.qq.com/中设置自建应用的菜单等
    ## 配置步聚：
    # 1、在微信企业应用接收消息设置页面生成Token和EncodingAESKey并填入下面区域。
    # 2、重启本程序。
    # 3、在微信企业应用接收消息设置页面输入此地址：http(s)://ip:3000/wechat，需要有公网IP并做好端口转发，最好要有域名
    Token:
    EncodingAESKey:
  # 【Server酱消息通知】：填写ServerChan的API KEY，SCT类型，在https://sct.ftqq.com/中申请（非VIP貌似每日限制只能收到5条消息）
  serverchan:
    sckey:
  # 【Telegram通知】：填写Telegram bot机器人的信息，需要在Telegram中创建机器人
  telegram:
    # telegram机器人的Token，关注BotFather创建机器人
    telegram_token:
    # telegram中关注getuserID获取
    telegram_chat_id:
    # 【webhook开关】：打开该开关会对该机器人设置WebHook，实现在聊天窗口运行服务及进行PT资源检索下载，只有管理员用户可以使用命令
    # 注意：受Telegram限制，程序外网访问地址需要设置为以下端口之一：443, 80, 88, 8443，且需要有公网认证的可信SSL证书
    webhook: true
  # 【Bark通知】，手机上安装Bark客户端，Server可以使用默认的也可以自己搭建，自己搭建的更换为服务器地址和端口，格式：http(s)://IP:PORT
  bark:
    # 自己搭建请更换，否则保持默认
    server: https://api.day.app
    # Bark客户端生成的KEY
    apikey:

# 【配置文件夹监控】：文件夹内容发生变化时自动识别转移
sync:
  # 【监控目录列表】：监控目录有文件变化时会自动进行媒体识别、转移并命名
  # 可以配置多个，使用|分隔，按'源目录|目的目录|未识别目录'格式配置，源目录为需要同步的目录，目的目录为识别和改名后存放的目录，未识别目录为无法识别时转移的目录
  # 配置格式1：'源目录'，比如：'/mnt/pt'，源目录文件会自动识别是电影、电视剧或动漫并分别转移到media中配置的movie_path、tv_path、anime_path目录中，未识别的会转移到media中配置的unknown_path中
  # 配置格式2：'源目录|目的目录'，比如：'/mnt/pt_movie|mnt/emby_movie'，源目录中文件不会区分类型，均往目的目录转移，未识别的会转移到media中配置的unknown_path中
  # 配置格式3：'源目录|目的目录|未识别目录'，比如：'/mnt/pt_movie|mnt/emby_movie|emby_unknown'，源目录中文件不会区分类型，均往目的目录转移，未识别的会转移到未识别目录中
  # 配置格式4：'[源目录|目的目录]'，比如'[/mnt/pt_music|mnt/emby_music]'，即使用[]括起来代表这个目录不是影视文件，不需要进行识别和重命名，程序会对源目录下所有的文件全部硬链接到目的目录，不会有消息通知等功能
  # 一行的三个目录需要在同一个磁盘分区/共享目录中，有多个目录的，需要映射上级目录，源目录和目的目录为子目录，如果分开映射则可能发生跨盘的问题
  # 未识别的记录同时会在媒体识别->手动识别下面出现，未识别目录只是硬链接一份用于备份，同时手工识别处理后程序也不会主动删除，如果不想要多硬链接一份，可以不配置该目录
  sync_path:
  # 【监控目录文件的转移方式】：link、copy、softlink，link即硬链接、softlink为软链接，copy为复制，均会重命名
  # link要求源目录和目的目录或媒体库目录在一个磁盘分区或者存储空间，Docker运行时link模式需要直接映射源目录和目的目录或媒体库目录的上级目录，否则docker可能仍然会认为是跨盘
  # softlink模式注意宿主机的源目录映射到docker容器中后要路径要一致，否则可能软链接成功但无法在宿主机使用
  sync_mod: link
  # 【监控目录操作系统类型】：windows、linux。如果是windows，目录同步功能性能会比较差，会导致NAS不能休眠，除非是挂载的windows的远程共享目录，否则建议设置为linux
  nas_sys: linux

# 【配置PT站点和检索信息】
pt:
  # 【PT下载使用的客户端软件】：qbittorrent、transmission，需要配置qbittorrent或transmission对应的配置区域
  pt_client: qbittorrent
  # 【PT下载软件监控开关】：是否监控PT下载软件：true、false，如为true则PT下载完成会自动转移和重命名，如为false则不会处理
  # PT下载软件监控与Sync下载目录同步不要同时开启，否则功能存在重复
  pt_monitor: false
  # 【只监控NASTool添加的下载】：启用后只有NASTool添加的下载才会被自动转移和显示，关闭则下载软件中所有的任务都会转移和显示
  pt_monitor_only: True
  # 【PT下载完成后转移到媒体库的转移模式】：copy复制模式、link硬链接模式、softlink软链接模式，均会重命名
  # copy下载做种和媒体库是两份，多占用存储（下载盘大小决定能保多少种），好处是媒体库的盘不用24小时运行可以休眠
  # link模式不用额外增加存储空间，一份文件两份目录（显示的大小一样），但需要下载目录和媒体库目录在一个磁盘分区或者存储空间，Docker运行时link模式需要直接映射源目录和目的目录或媒体库目录的上级目录，否则docker可能仍然会认为是跨盘
  # softlink模式注意宿主机的源目录映射到docker容器中后要路径要一致，否则可能软链接成功但无法在宿主机使用
  rmt_mode: link
  #【PT聚合检索使用的检索器】：jackett、prowlarr，需要配置jackett或prowlarr对应的配置区域
  # 1、通过微信发送关键字，实时检索下载，发送格式示例：电视剧 西部世界、西部世界第1季、西部世界第1季第2集、西部世界 2022，只会匹配真实名称，命中后会自动下载，使用说明参考：https://github.com/jxxghp/nas-tools/wiki/
  # 2、使用WEB UI中的搜索界面搜索PT资源，会识别显示真实名称，并显示媒体图片和评分等信息，会同时匹配种子名称跟真实名称
  search_indexer: jackett
  # 【远程搜索自动择优下载开关】：如开启则微信等渠道搜索后会自动择优选择一项下载，如不开启则需要手工点击进入WEB页面选择下载
  # 如没有配置app.domain或无公网环境建议开启，否则无法跳转WEB页面手工选择
  search_auto: true
  # 【远程搜索无结果自动添加RSS】：如开启，远程搜索没有结果时，会自动添加RSS订阅
  search_no_result_rss: false
  # 【PT站每日签到时间】
  # 两种配置方法，1、配置间隔，单位小时，建议不要设置为24小时的整数倍，避免每天的签到时间一样。2、配置固定时间，如'08:00'，注意要加引号和冒号
  ptsignin_cron: '08:01'
  # 【PT做种清理开关】：此处配置PT做种时间，做种超过该时间则会自动删种（包括已下载的文件），单位是【天】。
  # 如果是使用COPY模式，这个根据PT下载盘的大小配置，如果是使用LINK模式，这个一般不配置，
  # 不配置或者配置为0则不启用PT做种清理功能
  pt_seeding_time:
  # 【RSS订阅开关】：此处配置RSS订阅检查时间间隔，即每隔多长时间检查一下各PT站是否有资源更新，建议不要少于30分钟，单位时间为秒
  # 配置为空或者0则不启用RSS订阅功能
  pt_check_interval: 1800
  # 【定量搜索RSS开关】：打开后，每隔与置时间会通过PT站资源检索的方式查询和下载订阅，单位：天，不配置则为关
  search_rss_interval:

# 【配置Jackett检索器】
jackett:
  # 【Jackett ApiKey】：Jackett配置页面右上角复制API Key
  api_key:
  # 【Jackett索引器】：Jackett Indexer中添加索引器，选择“Copy Torznab Feed”生成链接填入，可以配置多个，配置上的就会参与检索(注意最后要带/)，配置在前面的优先
  indexers:

# 【配置prowlarr检索器】
prowlarr:
  # 【Prowlarr地址】
  host: http://127.0.0.1:9696
  # 【Prowlarr ApiKey】：Prowlarr设置页面获取API Key
  api_key:

# 【配置qBittorrent下载软件】：pt区的pt_client如配置为qbittorrent则需要同步配置该项
qbittorrent:
  # 【qBittorrent IP地址和端口】：注意如果qb启动了HTTPS证书，则需要配置为https://IP
  qbhost: 127.0.0.1
  qbport: 8080
  # qBittorrent 登录用户名和密码
  qbusername: admin
  qbpassword: adminadmin
  # 转移完成后是否自动强制作种，按需要设置
  force_upload: true
  ## 下面两项配置问的人比较多，解释一下：
  # 1、save_path是nastool检索到需要新增下载时告诉qb下到哪个目录去，是传给qb的
  # 2、save_containerpath是告诉nastool qb的下载路径对应在nastool里又是映射为什么路径，这样nastool才能通过这个路径访问到qb下载好的文件
  # qBittorrent下载保存目录，如果是Docker版本的qb这个是容器内的路径
  ## 有两种配置方法：
  # 1、直接在：号后面配置一个路径（删掉下面的movie、tv、anime项），则所有电影电视剧动漫均下载到这个目录中
  # 2、在save_path下面配置子栏目，可以按电影movie、电视剧tv、动漫anime分开目录存储，anime动漫可以不配置，不配时使用tv目录
  # 如果需要配置的下载目录生效，QB的下载管理模式需要为【手动】
  # 配置子栏目的情况下同时也支持分类自动管理（使用qb的分类下载目录），在路径后面使用|加上分类名即可，比如：'/download/movie|电影'
  save_path:
    movie:
    tv:
    anime:
  # 1、如果本程序是用Docker运行，则这个是PT下载目录对应映射到本程序Docker容器内的路径
  # 2、如果本程序不是Docker运行但qb是Docker运行，则设置为PT下载目录在宿主机上的真实路径
  # 3、不是以上两种情况，或者在容器中的映射路径与宿主机的路径一致（推荐）则留空即可
  # 配置项需要跟save_path一一对应
  save_containerpath:
    movie:
    tv:
    anime:

# 【配置transmission下载软件】：pt区的pt_client如配置为transmission则需要同步配置该项，需要3.0以上版本，否则可能会报错
transmission:
  # 【transmission IP地址和端口】：注意如果tr启用了HTTPS证书，则需要配置为https://IP
  trhost: 127.0.0.1
  trport: 9091
  # transmission 登录用户名和密码
  trusername: admin
  trpassword: password
  ## 下面两项配置问的人比较多，解释一下：
  # 1、save_path是nastool检索到需要新增下载时告诉tr下到哪个目录去，是传给tr的
  # 2、save_containerpath是告诉nastool tr的下载路径对应在nastool里又是映射为什么路径，这样nastool才能通过这个路径访问到tr下载好的文件
  # transmission下载保存目录，如果是Docker版本的tr这个是容器内的路径
  ## 有两种配置方法：
  # 1、直接在：号后面配置一个路径（删掉下面的movie、tv、anime项），则所有电影电视剧动漫均下载到这个目录中
  # 2、在save_path下面配置子栏目，可以按电影movie、电视剧tv、动漫anime分开目录存储，anime动漫可以不配置，不配时使用tv目录
  save_path:
    movie:
    tv:
    anime:
  # 1、如果本程序是用Docker运行，则这个是PT下载目录对应映射到本程序Docker容器内的路径
  # 2、如果本程序不是Docker运行但tr是Docker运行，则设置为PT下载目录在宿主机上的真实路径
  # 3、不是以上两种情况，或者在容器中的映射路径与宿主机的路径一致（推荐）则留空即可
  # 配置项需要跟save_path一一对应
  save_containerpath:
    movie:
    tv:
    anime:

# 【配置豆瓣账号信息】：配置后会自动同步豆瓣收藏，豆瓣标记想看内容后，后台自动下载
douban:
  # 【用户ID列表】：豆瓣电影点个我主页people后面的那一串数字，或者使用豆瓣App个人信息中查看。可以配置多个，注意要加引号
  # 这里可以是自己的，也可以是别人的，比如填写几个大V的账号ID，实现热门影视自动下载
  users:
    - ''
  # 【豆瓣Cookie】：选配，嫌麻烦的可以不用配置，可能影响个别电影的同步
  cookie:
  # 【同步天数】：同步多少天内加入的数据
  days: 30
  # 【同步间隔】：多久同步一次数据，单位小时，建议不要太频繁，避免被检测到后封号
  interval: 2
  # 【同步数据类型】：同步哪些类型的收藏数据：do 在看，wish 想看，collect 看过，用逗号分隔配置
  types: 'do,wish,collect'
  # 【自动开载开关】：同步到豆瓣的数据后是否自动检索PT站并下载（需要配置Jackett）
  auto_search: true
  # 【自动添加RSS开关】：PT站检索找不到的记录是否自动添加RSS订阅（可实现未搜索到的自动追更）
  auto_rss: true

# 【配置字幕自动下载】
subtitle:
  # 【下载渠道】：opensubtitles、chinesesubfinder
  server: opensubtitles
  # 配置OpenSubtitles.org中注册的用户名和密码
  opensubtitles:
    # 用户名
    username:
    # 密码
    password:
  # 配置ChineseSubFinder的服务器地址和API Key，API Key在ChineseSubFinder->配置中心->实验室->API Key处生成
  chinesesubfinder:
    host:
    api_key:

# 【配置安全】
security:
  # 【媒体服务器webhook允许ip范围】：即只有如下范围的IP才允许调用webhook
  media_server_webhook_allow_ip:
    ipv4: 0.0.0.0/0
    ipv6: ::/0
  # 【Telegram webhook允许ip范围】：即只有如下范围的IP才允许调用webhook
  telegram_webhook_allow_ip:
    ipv4: 149.154.160.0/20,91.108.4.0/22
    ipv6: ::/0

# 【实验室】
laboratory:
  # 【识别增强】关键字猜想
  search_keyword: false
  # 【TMDB缓存过期策略】：是否开启TMDB缓存过期策略，默认7天过期，过期缓存将被删除,  7天内访问过期时间可以被刷新
  tmdb_cache_expire: false
  # 【使用豆瓣名称联想】：开启将使用豆瓣进行电影电视剧的名称联想，否则使用TMDB的数据
  use_douban_titles: true
